from http.server import BaseHTTPRequestHandler, HTTPServer
from io import BytesIO
from PIL import Image


class RequestHandler(BaseHTTPRequestHandler):
    get_request_count = 0

    def do_HEAD(self):
        self.send_response(200)
        self.end_headers()

    def do_GET(self):
        self.send_fake_image()

    def send_fake_image(self):
        # Create a simple 1x1 pixel red image
        with BytesIO() as img_io:
            img = Image.new('RGB', (1, 1), (255, 0, 0))
            img.save(img_io, 'PNG')
            img_io.seek(0)
            self.send_response(301)
            self.send_header('Content-type', 'image/png')
            self.send_header('Location', 'http://127.0.0.1:8888')
            self.end_headers()
            self.wfile.write(img_io.read())


def run(server_class=HTTPServer, handler_class=RequestHandler, port=8887):
    server_address = ('', port)
    httpd = server_class(server_address, handler_class)
    print(f"Starting httpd on port {port}...")
    httpd.serve_forever()


if __name__ == "__main__":
    run()